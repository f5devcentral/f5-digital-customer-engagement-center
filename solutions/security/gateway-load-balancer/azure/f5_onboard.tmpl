#!/bin/bash -x

# NOTE: Startup Script is run once / initialization only (Cloud-Init behavior vs. typical re-entrant for Azure Custom Script Extension )
# For 15.1+ and above, Cloud-Init will run the script directly and can remove Azure Custom Script Extension


mkdir -p  /var/log/cloud /config/cloud /var/config/rest/downloads


LOG_FILE=/var/log/cloud/startup-script.log
[[ ! -f $LOG_FILE ]] && touch $LOG_FILE || { echo "Run Only Once. Exiting"; exit; }
npipe=/tmp/$$.tmp
trap "rm -f $npipe" EXIT
mknod $npipe p
tee <$npipe -a $LOG_FILE /dev/ttyS0 &
exec 1>&-
exec 1>$npipe
exec 2>&1


### write_files:
# Download or Render BIG-IP Runtime Init Config

cat << 'EOF' > /config/cloud/runtime-init-conf.yaml
---
runtime_parameters:
  - name: HOST_NAME
    type: metadata
    metadataProvider:
      environment: azure
      type: compute
      field: name
  - name: REGION
    type: url
    value: http://169.254.169.254/metadata/instance/compute/location?api-version=2021-05-01&format=text
    headers:
      - name: Metadata
        value: true
  - name: USER_NAME
    type: static
    value: ${f5_username}
  - name: ADMIN_PASS
    type: static
    value: ${f5_password}
  - name: SSH_KEYS
    type: static
    value: ${ssh_keypair}
  - name: GATEWAY_EXTERNAL
    type: metadata
    metadataProvider:
      environment: azure
      type: network
      field: ipv4
      index: 1
      ipcalc: first
  - name: SELF_IP_EXTERNAL
    type: metadata
    metadataProvider:
      environment: azure
      type: network
      field: ipv4
      index: 1
      ipcalc: address
  - name: SELF_IP_INTERNAL
    type: metadata
    metadataProvider:
      environment: azure
      type: network
      field: ipv4
      index: 2
      ipcalc: address
  - name: DNS_SERVER
    type: static
    value: ${dns_server}
  - name: NTP_SERVER
    type: static
    value: ${ntp_server}
  - name: TIMEZONE
    type: static
    value: ${timezone}
pre_onboard_enabled:
  - name: provision_rest
    type: inline
    commands:
      - /usr/bin/setdb provision.extramb 1000
      - /usr/bin/setdb restjavad.useextramb true
      - /usr/bin/setdb setup.run false
      - /usr/bin/setdb config.allow.rfc3927 enable
extension_packages:
  install_operations:
    - extensionType: do
      extensionVersion: ${DO_VER}
      extensionUrl: ${DO_URL}
    - extensionType: as3
      extensionVersion: ${AS3_VER}
      extensionUrl: ${AS3_URL}
    - extensionType: ts
      extensionVersion: ${TS_VER}
      extensionUrl: ${TS_URL}
extension_services:
  service_operations:
    - extensionType: do
      type: inline
      value:
        schemaVersion: 1.0.0
        class: Device
        async: true
        label: Onboard BIG-IP standalone
        Common:
          class: Tenant
          dbVars:
            class: DbVariables
            restjavad.useextramb: true
            provision.extramb: 1000
            config.allow.rfc3927: enable
            ui.advisory.enabled: true
            ui.advisory.color: blue
            ui.advisory.text: '{{{ HOST_NAME }}}.example.com'
          mySystem:
            autoPhonehome: true
            class: System
            hostname: '{{{ HOST_NAME }}}.example.com'
          '{{{ USER_NAME }}}':
            class: User
            partitionAccess:
              all-partitions:
                role: admin
            password: '{{{ ADMIN_PASS }}}'
            shell: bash
            userType: regular
            keys:
              - '{{{ SSH_KEYS }}}'
          myDns:
            class: DNS
            nameServers:
              - '{{{ DNS_SERVER }}}'
              - 2001:4860:4860::8844
            search:
              - f5.com
          myNtp:
            class: NTP
            servers:
              - '{{{ NTP_SERVER }}}'
              - 1.pool.ntp.org
              - 2.pool.ntp.org
            timezone: '{{{ TIMEZONE }}}'
          myProvisioning:
            class: Provision
            ltm: nominal
            asm: nominal
          external:
            class: VLAN
            tag: 4094
            mtu: 9001
            interfaces:
              - name: 1.1
                tagged: false
          external-self:
            class: SelfIp
            address: '{{{ SELF_IP_EXTERNAL }}}/24'
            vlan: external
            allowService: all
            trafficGroup: traffic-group-local-only
          internal:
            class: VLAN
            tag: 4093
            mtu: 1500
            interfaces:
              - name: 1.2
                tagged: false
          internal-localself:
            class: SelfIp
            address: '{{{ SELF_IP_INTERNAL }}}/24'
            vlan: internal
            allowService: default
            trafficGroup: traffic-group-local-only
          default:
            class: Route
            gw: '{{{ GATEWAY_EXTERNAL }}}'
            network: default
            mtu: 1500
    - extensionType: as3
      type: inline
      value:
        class: ADC
        schemaVersion: 3.0.0
        label: Quickstart
        remark: Quickstart
        controls:
          class: Controls
          logLevel: debug
        Tenant_1:
          class: Tenant
          Shared:
            class: Application
            template: shared
            monitor_respond_200:
              class: iRule
              iRule: "when HTTP_REQUEST {\n   HTTP::respond 200 System Responding \n}\n"
            vs_for_gwlb_monitor:
              class: Service_HTTP
              remark: Health check listener for GWLB health checks
              virtualPort: 80
              virtualAddresses:
                - "{{{SELF_IP_EXTERNAL_ADDRESS}}}"
              iRules:
                - monitor_respond_200
            inbound_pool:
              class: Pool
              remark: Forward through Internal Tunnel
              members:
                - serverAddresses:
                    - 192.168.2.1
                  servicePort: 0
            outbound_pool:
              class: Pool
              remark: Forward through Outbound Tunnel
              members:
                - serverAddresses:
                    - 192.168.1.1
                  servicePort: 0
          HTTP_Service:
            class: Application
            template: http
            serviceMain:
              class: Service_HTTP
              virtualAddresses:
                - ${public_lb_frontend_ip}
              snat: none
              translateServerAddress: false
              translateServerPort: false
              policyWAF:
                use: WAFPolicy
              pool: /Tenant_1/Shared/inbound_pool
            WAFPolicy:
              class: WAF_Policy
              file: >-
                /config/cloud/asm-policy.xml
              enforcementMode: blocking
              ignoreChanges: false
          HTTPS_Service:
            class: Application
            template: https
            serviceMain:
              class: Service_HTTPS
              virtualAddresses:
                - ${public_lb_frontend_ip}
              snat: none
              translateServerAddress: false
              translateServerPort: false
              policyWAF:
                use: WAFPolicy
              pool: /Tenant_1/Shared/inbound_pool
              serverTLS:
                bigip: /Common/clientssl
              clientTLS:
                bigip: /Common/serverssl
              redirect80: false
            WAFPolicy:
              class: WAF_Policy
              file: >-
                /config/cloud/asm-policy.xml
              enforcementMode: blocking
              ignoreChanges: false
          Inbound_Service:
            class: Application
            inbound_vs_tcp:
              class: Service_TCP
              virtualAddresses:
                - ${public_lb_frontend_ip}
              virtualPort: 0
              snat: none
              translateServerAddress: false
              translateServerPort: false
              pool: /Tenant_1/Shared/inbound_pool
          Outbound_Service:
            class: Application
            outbound_vs_80:
              class: Service_TCP
              virtualAddresses:
                - 0.0.0.0
              virtualPort: 80
              snat: none
              translateServerAddress: false
              translateServerPort: false
              pool: /Tenant_1/Shared/outbound_pool
            outbound_vs_443:
              class: Service_TCP
              virtualAddresses:
                - 0.0.0.0
              virtualPort: 443
              snat: none
              translateServerAddress: false
              translateServerPort: false
              pool: /Tenant_1/Shared/outbound_pool
post_onboard_enabled:
  - name: gwlb_config
    type: inline
    commands:
      - tmsh create net tunnels vxlan gwlb-ext-vxlan-prof port 2001 flooding-type none
      - tmsh create net tunnels vxlan gwlb-int-vxlan-prof port 2002 flooding-type none
      - tmsh create net tunnels tunnel gwlb_external_tun key 801 profile gwlb-ext-vxlan-prof local-address {{{ SELF_IP_EXTERNAL_ADDRESS }}} remote-address any mtu 1450
      - tmsh create net tunnels tunnel gwlb_internal_tun key 802 profile gwlb-int-vxlan-prof local-address {{{ SELF_IP_EXTERNAL_ADDRESS }}} remote-address any mtu 1450
      - tmsh create net vlan-group vg1 members add { gwlb_external_tun }
      - tmsh create net vlan-group vg2 members add { gwlb_internal_tun } bridge-traffic enabled
      - tmsh create net self vxlan_external_self address 192.168.1.11/28 vlan vg1 allow-service all
      - tmsh create net self vxlan_internal_self address 192.168.2.11/28 vlan vg2 allow-service all
      - tmsh create net arp fake_arp_entry_ext ip-address 192.168.1.1 mac-address ff:ff:ff:ff:ff:ff
      - tmsh create net arp fake_arp_entry_int ip-address 192.168.2.1 mac-address ff:ff:ff:ff:ff:ee
      - "GATEWAY_ADDRESS=${gwlb_frontend_ip}; tmsh modify net fdb tunnel gwlb_external_tun records add { ff:ff:ff:ff:ff:ee { description fwd_node endpoint $GATEWAY_ADDRESS } }; tmsh modify net fdb tunnel gwlb_internal_tun records add { ff:ff:ff:ff:ff:ee { description fwd_node endpoint $GATEWAY_ADDRESS } }"
      - tmsh save /sys config
EOF

# Download BIG-IP Runtime Init
for i in {1..30}; do
    curl -fv --retry 1 --connect-timeout 5 -L ${INIT_URL} -o "/var/config/rest/downloads/f5-bigip-runtime.gz.run" && break || sleep 10
done

# Remove comment to do silly debugging on BIG-IP Runtime init
#export F5_BIGIP_RUNTIME_INIT_LOG_LEVEL=silly
#export F5_BIGIP_RUNTIME_EXTENSION_INSTALL_DELAY_IN_MS=60000

# Install BIG-IP Runtime Init
bash /var/config/rest/downloads/f5-bigip-runtime.gz.run -- '--cloud azure'

# Run BIG-IP Runtime Init and Process YAML
f5-bigip-runtime-init --config-file /config/cloud/runtime-init-conf.yaml
