# File : .github/workflows/nginxForAzureDeploy.yml

name: Sync the NGINX configuration from the GitHub repository to an NGINX for Azure deployment
on:
  push:
    branches:
      - main
    paths:
      - solutions/delivery/application_delivery_controller/nginx/nginx-for-azure/configs/**

env:
  RESOURCE_GROUP_NAME: ${sharedResourceGroup}
  NGINX_DEPLOYMENT_NAME: ${nginxDeploymentName}
  NGINX_TRANSFORMED_CONFIG_DIR_PATH: /etc/nginx/
  NGINX_CONFIG_DIRECTORY_PATH: solutions/delivery/application_delivery_controller/nginx/nginx-for-azure/configs/
  NGINX_ROOT_CONFIG_FILE: nginx.conf

permissions:
      id-token: write
      contents: read

jobs:
  Deploy-NGINX-Configuration:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout repository'
      uses: actions/checkout@v2

    - name: 'Azure Login using OIDC'
      uses: azure/login@v1
      with:
        client-id: $${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: $${{ secrets.AZURE_TENANT_ID }}
        subscription-id: $${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: "Initialize upstream files"
      shell: bash
      run: |
        echo "# auto generated by GitHub actions" > $NGINX_CONFIG_DIRECTORY_PATH/upstreams/app1-vmss.conf
        echo "# auto generated by GitHub actions" > $NGINX_CONFIG_DIRECTORY_PATH/upstreams/app1-west-vmss.conf
        echo "# auto generated by GitHub actions" > $NGINX_CONFIG_DIRECTORY_PATH/upstreams/app1-east-vmss.conf

    - name: "Get VMSS IP addresses App West"
      shell: bash
      run: |
        vmIPs=$(az vmss nic list -g ${appWestResourceGroup} --vmss-name ${vmssNameWest} | jq --raw-output '.[].ipConfigurations[].privateIpAddress')
        for ip in $vmIPs; do
          # add to main app1 upstream conf
          echo "server $ip:80;" >> $NGINX_CONFIG_DIRECTORY_PATH/upstreams/app1-vmss.conf
          # add to app west upstream conf too
          echo "server $ip:80;" >> $NGINX_CONFIG_DIRECTORY_PATH/upstreams/app1-west-vmss.conf
        done

    - name: "Get VMSS IP addresses App East"
      shell: bash
      run: |
        vmIPs=$(az vmss nic list -g ${appEastResourceGroup} --vmss-name ${vmssNameEast} | jq --raw-output '.[].ipConfigurations[].privateIpAddress')
        for ip in $vmIPs; do
          # add to app east upstream conf
          echo "server $ip:80;" >> $NGINX_CONFIG_DIRECTORY_PATH/upstreams/app1-east-vmss.conf
          # add as backup member in main app1 upstream too
          echo "server $ip:80 backup;" >> $NGINX_CONFIG_DIRECTORY_PATH/upstreams/app1-vmss.conf
        done

    - name: "Validate contents"
      shell: bash
      run: |
        echo "Checking app1-vmss.conf"
        cat $NGINX_CONFIG_DIRECTORY_PATH/upstreams/app1-vmss.conf
        echo "Checking app1-west-vmss.conf"
        cat $NGINX_CONFIG_DIRECTORY_PATH/upstreams/app1-west-vmss.conf
        echo "Checking app1-east-vmss.conf"
        cat $NGINX_CONFIG_DIRECTORY_PATH/upstreams/app1-east-vmss.conf

    - name: 'Sync NGINX configuration to NGINX for Azure'
      uses: nginxinc/nginx-for-azure-deploy-action@v0.3.0
      with:
        subscription-id: $${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resource-group-name: $RESOURCE_GROUP_NAME
        nginx-deployment-name: $NGINX_DEPLOYMENT_NAME
        nginx-config-directory-path: $NGINX_CONFIG_DIRECTORY_PATH
        nginx-root-config-file: $NGINX_ROOT_CONFIG_FILE
        transformed-nginx-config-directory-path: $NGINX_TRANSFORMED_CONFIG_DIR_PATH
